!function(n){var i={};function s(t){if(i[t])return i[t].exports;var a=i[t]={i:t,l:!1,exports:{}};return n[t].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=n,s.c=i,s.d=function(n,i,t){s.o(n,i)||Object.defineProperty(n,i,{enumerable:!0,get:t})},s.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},s.t=function(n,i){if(1&i&&(n=s(n)),8&i)return n;if(4&i&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&i&&"string"!=typeof n)for(var a in n)s.d(t,a,function(i){return n[i]}.bind(null,a));return t},s.n=function(n){var i=n&&n.__esModule?function(){return n.default}:function(){return n};return s.d(i,"a",i),i},s.o=function(n,i){return Object.prototype.hasOwnProperty.call(n,i)},s.p="",s(s.s=1)}([function(n){n.exports={abet:{singularPast:"abetted",continuous:"abetting"},abut:{singularPast:"abutted",continuous:"abutting"},accompany:{singularPast:"accompanied"},acetify:{singularPast:"acetified"},acidify:{singularPast:"acidified"},acquit:{singularPast:"acquitted",continuous:"acquitting"},admit:{singularPast:"admitted",continuous:"admitting"},aerify:{singularPast:"aerified"},airdrop:{singularPast:"airdropped",continuous:"airdropping"},alkalify:{singularPast:"alkalified"},allot:{singularPast:"allotted",continuous:"allotting"},ally:{singularPast:"allied"},ammonify:{singularPast:"ammonified"},amnesty:{singularPast:"amnestied"},amplify:{singularPast:"amplified"},anglify:{singularPast:"anglified"},annul:{singularPast:"annulled",continuous:"annulling"},appall:{singularPast:"appalled",continuous:"appalling"},apply:{singularPast:"applied"},arc:{singularPast:"arcked",continuous:"arcking"},argufy:{singularPast:"argufied"},arise:{perfect:"arisen",singularPast:"arose"},atrophy:{singularPast:"atrophied"},aver:{singularPast:"averred",continuous:"averring"},awake:{singularPast:"awoke",perfect:"awoken"},baby:{singularPast:"babied"},backbite:{singularPast:"backbit",perfect:"backbitten"},backslide:{singularPast:"backslid",perfect:"backslidden"},bag:{singularPast:"bagged",continuous:"bagging"},ballyrag:{singularPast:"ballyragged",continuous:"ballyragging"},ban:{singularPast:"banned",continuous:"banning"},bandy:{singularPast:"bandied"},bar:{singularPast:"barred",continuous:"barring"},barrel:{singularPast:"barrelled",continuous:"barrelling"},basify:{singularPast:"basified"},bat:{singularPast:"batted",continuous:"batting"},bayonet:{singularPast:"bayonetted",continuous:"bayonetting"},bear:{singularPast:"bore",perfect:"born"},beat:{perfect:"beaten",singularPast:"beat"},beatify:{singularPast:"beatified"},beautify:{singularPast:"beautified"},become:{singularPast:"became",perfect:"become"},bed:{singularPast:"bedded",continuous:"bedding"},bedevil:{singularPast:"bedevilled",continuous:"bedevilling"},bedim:{singularPast:"bedimmed",continuous:"bedimming"},befall:{perfect:"befallen",singularPast:"befell"},befit:{singularPast:"befitted",continuous:"befitting"},befog:{singularPast:"befogged",continuous:"befogging"},beg:{singularPast:"begged",continuous:"begging"},beget:{continuous:"begetting",singularPast:"begot",perfect:"begotten"},begin:{singularPast:"began",continuous:"beginning",perfect:"begun"},begird:{singularPast:"begirt"},behold:{singularPast:"beheld",perfect:"beholden"},bejewel:{singularPast:"bejewelled",continuous:"bejewelling"},belie:{continuous:"belying"},belly:{singularPast:"bellied"},bend:{singularPast:"bent"},benefit:{singularPast:"benefitted",continuous:"benefitting"},berry:{singularPast:"berried"},beseech:{singularPast:"besought"},beset:{continuous:"besetting"},bespeak:{singularPast:"bespoke",perfect:"bespoken"},bestir:{singularPast:"bestirred",continuous:"bestirring"},bestrew:{perfect:"bestrewn"},bestride:{perfect:"bestridden",singularPast:"bestrode"},bet:{singularPast:"bet",continuous:"betting"},betake:{perfect:"betaken",singularPast:"betook"},bethink:{singularPast:"bethought"},bevel:{singularPast:"bevelled",continuous:"bevelling"},bias:{singularPast:"biassed",continuous:"biassing"},bid:{singularPast:"bid",continuous:"bidding"},bin:{singularPast:"binned",continuous:"binning"},bind:{singularPast:"bound"},bing:{continuous:"bing"},bit:{singularPast:"bitted",continuous:"bitting"},bite:{singularPast:"bit",perfect:"bitten"},bivouac:{singularPast:"bivouacked",continuous:"bivouacking"},blab:{singularPast:"blabbed",continuous:"blabbing"},blackberry:{singularPast:"blackberried"},blackleg:{singularPast:"blacklegged",continuous:"blacklegging"},blat:{singularPast:"blatted",continuous:"blatting"},bleed:{singularPast:"bled"},blip:{singularPast:"blipped",continuous:"blipping"},blob:{singularPast:"blobbed",continuous:"blobbing"},bloody:{singularPast:"bloodied"},blot:{singularPast:"blotted",continuous:"blotting"},blow:{singularPast:"blew",perfect:"blown"},blub:{singularPast:"blubbed",continuous:"blubbing"},blur:{singularPast:"blurred",continuous:"blurring"},bob:{singularPast:"bobbed",continuous:"bobbing"},body:{singularPast:"bodied"},bootleg:{singularPast:"bootlegged",continuous:"bootlegging"},bop:{singularPast:"bopped",continuous:"bopping"},brag:{singularPast:"bragged",continuous:"bragging"},break:{singularPast:"broke",perfect:"broken"},breed:{singularPast:"bred"},brevet:{singularPast:"brevetted",continuous:"brevetting"},brim:{singularPast:"brimmed",continuous:"brimming"},bring:{singularPast:"brought"},browbeat:{perfect:"browbeaten"},brutify:{singularPast:"brutified"},bud:{singularPast:"budded",continuous:"budding"},bug:{singularPast:"bugged",continuous:"bugging"},build:{singularPast:"built"},bulldog:{continuous:"bulldogging",singularPast:"bulldogged"},bullshit:{singularPast:"bullshitted",continuous:"bullshitting"},bullwhip:{singularPast:"bullwhipped",continuous:"bullwhipping"},bully:{singularPast:"bullied"},bullyrag:{singularPast:"bullyragged",continuous:"bullyragging"},bum:{singularPast:"bummed",continuous:"bumming"},bur:{singularPast:"burred",continuous:"burring"},burst:{singularPast:"burst"},bury:{singularPast:"buried"},bushel:{singularPast:"bushelled",continuous:"bushelling"},busy:{singularPast:"busied"},buy:{singularPast:"bought"},cabal:{singularPast:"caballed",continuous:"caballing"},caddy:{singularPast:"caddied",singularPresent:"caddies",continuous:"caddying"},calcify:{singularPast:"calcified"},can:{singularPast:"canned",continuous:"canning"},canal:{singularPast:"canalled",continuous:"canalling"},cancel:{singularPast:"cancelled",continuous:"cancelling"},candy:{singularPast:"candied"},canopy:{singularPast:"canopied"},cap:{singularPast:"capped",continuous:"capping"},carburet:{singularPast:"carburetted",continuous:"carburetting"},carillon:{singularPast:"carillonned",continuous:"carillonning"},carnify:{singularPast:"carnified"},carny:{singularPast:"carnied"},carol:{singularPast:"carolled",continuous:"carolling"},carry:{singularPast:"carried"},casefy:{singularPast:"casefied"},cast:{singularPast:"cast"},cat:{singularPast:"catted",continuous:"catting"},catch:{singularPast:"caught"},catnap:{singularPast:"catnapped",continuous:"catnapping"},cavil:{singularPast:"cavilled",continuous:"cavilling"},certify:{singularPast:"certified"},channel:{singularPast:"channelled",continuous:"channelling"},chap:{singularPast:"chapped",continuous:"chapping"},char:{singularPast:"charred",continuous:"charring"},chat:{singularPast:"chatted",continuous:"chatting"},chin:{singularPast:"chinned",continuous:"chinning"},chip:{singularPast:"chipped",continuous:"chipping"},chisel:{singularPast:"chiselled",continuous:"chiselling"},chitchat:{singularPast:"chitchatted",continuous:"chitchatting"},chiv:{singularPast:"chivved",continuous:"chivving"},chivy:{singularPast:"chivvied",singularPresent:"chivvies",continuous:"chivvying"},chondrify:{singularPast:"chondrified"},choose:{singularPast:"chose",perfect:"chosen"},chop:{singularPast:"chopped",continuous:"chopping"},chug:{singularPast:"chugged",continuous:"chugging"},chum:{singularPast:"chummed",continuous:"chumming"},citify:{singularPast:"citified"},clad:{continuous:"cladding",singularPast:"cladded"},clam:{singularPast:"clammed",continuous:"clamming"},clap:{singularPast:"clapped",continuous:"clapping"},clarify:{singularPast:"clarified"},classify:{singularPast:"classified"},cleave:{singularPast:"clove",perfect:"cloven"},clem:{singularPast:"clemmed",continuous:"clemming"},clepe:{singularPast:"clept"},cling:{singularPast:"clung"},clip:{singularPast:"clipped",continuous:"clipping"},clog:{singularPast:"clogged",continuous:"clogging"},clop:{singularPast:"clopped",continuous:"clopping"},clot:{singularPast:"clotted",continuous:"clotting"},clothe:{singularPast:"clad"},club:{singularPast:"clubbed",continuous:"clubbing"},cockneyfy:{singularPast:"cockneyfied"},cod:{singularPast:"codded",continuous:"codding"},codify:{singularPast:"codified"},cog:{singularPast:"cogged",continuous:"cogging"},coif:{singularPast:"coiffed",continuous:"coiffing"},colly:{singularPast:"collied"},combat:{singularPast:"combatted",continuous:"combatting"},come:{singularPast:"came",perfect:"come"},commit:{singularPast:"committed",continuous:"committing"},compel:{singularPast:"compelled",continuous:"compelling"},complot:{singularPast:"complotted",continuous:"complotting"},comply:{singularPast:"complied"},con:{singularPast:"conned",continuous:"conning"},concur:{singularPast:"concurred",continuous:"concurring"},confab:{singularPast:"confabbed",continuous:"confabbing"},confer:{singularPast:"conferred",continuous:"conferring"},control:{singularPast:"controlled",continuous:"controlling"},cop:{singularPast:"copped",continuous:"copping"},copy:{singularPast:"copied"},coquet:{singularPast:"coquetted",continuous:"coquetting"},corral:{singularPast:"corralled",continuous:"corralling"},counsel:{singularPast:"counselled",continuous:"counselling"},counterplot:{singularPast:"counterplotted",continuous:"counterplotting"},countersink:{singularPast:"countersank",perfect:"countersunk"},crab:{singularPast:"crabbed",continuous:"crabbing"},cram:{singularPast:"crammed",continuous:"cramming"},crap:{singularPast:"crapped",continuous:"crapping"},creep:{singularPast:"crept"},crib:{singularPast:"cribbed",continuous:"cribbing"},crop:{singularPast:"cropped",continuous:"cropping"},crossbreed:{singularPast:"crossbred"},crosscut:{continuous:"crosscutting"},crucify:{singularPast:"crucified"},cry:{singularPast:"cried"},cub:{singularPast:"cubbed",continuous:"cubbing"},cudgel:{singularPast:"cudgelled",continuous:"cudgelling"},cup:{singularPast:"cupped",continuous:"cupping"},cupel:{singularPast:"cupelled",continuous:"cupelling"},curet:{singularPast:"curetted",continuous:"curetting"},curry:{singularPast:"curried"},curtsy:{singularPast:"curtsied"},curvet:{singularPast:"curvetted",continuous:"curvetting"},cut:{continuous:"cutting",singularPast:"cut"},dab:{singularPast:"dabbed",continuous:"dabbing"},dag:{singularPast:"dagged",continuous:"dagging"},dally:{singularPast:"dallied"},dam:{singularPast:"dammed",continuous:"damming"},damnify:{singularPast:"damnified"},dandify:{singularPast:"dandified"},dap:{singularPast:"dapped",continuous:"dapping"},deal:{singularPast:"dealt"},defer:{singularPast:"deferred",continuous:"deferring"},defy:{singularPast:"defied"},deify:{singularPast:"deified"},demit:{singularPast:"demitted",continuous:"demitting"},demur:{singularPast:"demurred",continuous:"demurring"},den:{singularPast:"denned",continuous:"denning"},denazify:{singularPast:"denazified"},deny:{singularPast:"denied"},descry:{singularPast:"descried"},deter:{singularPast:"deterred",continuous:"deterring"},devil:{singularPast:"devilled",continuous:"devilling"},devitrify:{singularPast:"devitrified"},diagram:{singularPast:"diagrammed",continuous:"diagramming"},dial:{singularPast:"dialled",continuous:"dialling"},dib:{singularPast:"dibbed",continuous:"dibbing"},die:{continuous:"dying"},dig:{continuous:"digging",singularPast:"dug"},dignify:{singularPast:"dignified"},dim:{singularPast:"dimmed",continuous:"dimming"},din:{singularPast:"dinned",continuous:"dinning"},dip:{singularPast:"dipped",continuous:"dipping"},dirty:{singularPast:"dirtied"},disembowel:{singularPast:"disembowelled",continuous:"disembowelling"},dishevel:{singularPast:"dishevelled",continuous:"dishevelling"},disinter:{singularPast:"disinterred",continuous:"disinterring"},dispel:{singularPast:"dispelled",continuous:"dispelling"},distill:{singularPast:"distilled",continuous:"distilling"},diversify:{singularPast:"diversified"},divvy:{singularPast:"divvied"},dizzy:{singularPast:"dizzied"},do:{singularPast:"did",perfect:"done"},dog:{singularPast:"dogged",continuous:"dogging"},dogleg:{singularPast:"doglegged",continuous:"doglegging"},dolly:{singularPast:"dollied"},don:{singularPast:"donned",continuous:"donning"},dot:{singularPast:"dotted",continuous:"dotting"},dow:{singularPast:"dought"},drab:{singularPast:"drabbed",continuous:"drabbing"},drag:{singularPast:"dragged",continuous:"dragging"},draw:{perfect:"drawn",singularPast:"drew"},drink:{singularPast:"drank",perfect:"drunk"},drip:{singularPast:"dripped",continuous:"dripping"},drive:{perfect:"driven",singularPast:"drove"},drivel:{singularPast:"drivelled",continuous:"drivelling"},drop:{singularPast:"dropped",continuous:"dropping"},drub:{singularPast:"drubbed",continuous:"drubbing"},drug:{singularPast:"drugged",continuous:"drugging"},drum:{singularPast:"drummed",continuous:"drumming"},dry:{singularPast:"dried"},dub:{singularPast:"dubbed",continuous:"dubbing"},duel:{singularPast:"duelled",continuous:"duelling"},dulcify:{singularPast:"dulcified"},dummy:{singularPast:"dummied"},dun:{singularPast:"dunned",continuous:"dunning"},easy:{singularPast:"easied"},eat:{singularPast:"ate",perfect:"eaten"},eavesdrop:{singularPast:"eavesdropped",continuous:"eavesdropping"},eddy:{singularPast:"eddied"},edify:{singularPast:"edified"},electrify:{singularPast:"electrified"},embed:{singularPast:"embedded",continuous:"embedding"},embody:{singularPast:"embodied"},embus:{singularPast:"embussed",singularPresent:"embusses",continuous:"embussing"},emit:{singularPast:"emitted",continuous:"emitting"},empanel:{singularPast:"empanelled",continuous:"empanelling"},empty:{singularPast:"emptied"},emulsify:{singularPast:"emulsified"},enamel:{singularPast:"enamelled",continuous:"enamelling"},englut:{singularPast:"englutted",continuous:"englutting"},enroll:{singularPast:"enrolled",continuous:"enrolling"},enthrall:{singularPast:"enthralled",continuous:"enthralling"},entrammel:{singularPast:"entrammelled",continuous:"entrammelling"},entrap:{singularPast:"entrapped",continuous:"entrapping"},envy:{singularPast:"envied"},enwind:{singularPast:"enwound"},enwrap:{singularPast:"enwrapped",continuous:"enwrapping"},equal:{singularPast:"equalled",continuous:"equalling"},equip:{singularPast:"equipped",continuous:"equipping"},espy:{singularPast:"espied"},esterify:{singularPast:"esterified"},estop:{singularPast:"estopped",continuous:"estopping"},etherify:{singularPast:"etherified"},excel:{singularPast:"excelled",continuous:"excelling"},exemplify:{singularPast:"exemplified"},expel:{singularPast:"expelled",continuous:"expelling"},extoll:{singularPast:"extolled",continuous:"extolling"},facet:{singularPast:"facetted",continuous:"facetting"},fag:{singularPast:"fagged",continuous:"fagging"},fall:{perfect:"fallen",singularPast:"fell"},falsify:{singularPast:"falsified"},fan:{singularPast:"fanned",continuous:"fanning"},fancy:{singularPast:"fancied"},fantasy:{singularPast:"fantasied"},fat:{singularPast:"fatted",continuous:"fatting"},featherbed:{singularPast:"featherbedded",continuous:"featherbedding"},fee:{singularPast:"feed"},feed:{singularPast:"fed"},feel:{singularPast:"felt"},ferry:{singularPast:"ferried"},fib:{singularPast:"fibbed",continuous:"fibbing"},fig:{singularPast:"figged",continuous:"figging"},fight:{singularPast:"fought"},fin:{singularPast:"finned",continuous:"finning"},find:{singularPast:"found"},fit:{singularPast:"fitted",continuous:"fitting"},flag:{singularPast:"flagged",continuous:"flagging"},flam:{singularPast:"flammed",continuous:"flamming"},flannel:{singularPast:"flannelled",continuous:"flannelling"},flap:{singularPast:"flapped",continuous:"flapping"},flat:{singularPast:"flatted",continuous:"flatting"},flee:{singularPast:"fled"},flimflam:{singularPast:"flimflammed",continuous:"flimflamming"},fling:{singularPast:"flung"},flip:{singularPast:"flipped",continuous:"flipping"},flit:{singularPast:"flitted",continuous:"flitting"},flog:{singularPast:"flogged",continuous:"flogging"},floodlight:{singularPast:"floodlit"},flop:{singularPast:"flopped",continuous:"flopping"},flub:{singularPast:"flubbed",continuous:"flubbing"},flurry:{singularPast:"flurried"},fly:{singularPast:"flew",perfect:"flown"},flyblow:{singularPast:"flyblew",perfect:"flyblown"},fob:{singularPast:"fobbed",continuous:"fobbing"},fog:{singularPast:"fogged",continuous:"fogging"},footslog:{singularPast:"footslogged",continuous:"footslogging"},forbear:{singularPast:"forbore",perfect:"forborne"},forbid:{singularPast:"forbad",perfect:"forbidden",continuous:"forbidding"},fordo:{singularPast:"fordid",perfect:"fordone"},foredo:{singularPast:"foredid",perfect:"foredone"},forego:{perfect:"foregone",singularPast:"forewent"},foreknow:{singularPast:"foreknew",perfect:"foreknown"},forerun:{singularPast:"foreran",continuous:"forerunning"},foresee:{singularPast:"foresaw",perfect:"foreseen"},foreshow:{perfect:"foreshown"},forespeak:{singularPast:"forespoke",perfect:"forespoken"},foretell:{singularPast:"foretold"},forget:{continuous:"forgetting",singularPast:"forgot",perfect:"forgotten"},forgive:{singularPast:"forgave",perfect:"forgiven"},forgo:{perfect:"forgone",singularPast:"forwent"},format:{singularPast:"formatted",continuous:"formatting"},forsake:{perfect:"forsaken",singularPast:"forsook"},forspeak:{singularPast:"forspoke",perfect:"forspoken"},forswear:{singularPast:"forswore",perfect:"forsworn"},fortify:{singularPast:"fortified"},foxtrot:{singularPast:"foxtrotted",continuous:"foxtrotting"},frap:{singularPast:"frapped",continuous:"frapping"},freeze:{singularPast:"froze",perfect:"frozen"},frenchify:{singularPast:"frenchified"},frenzy:{singularPast:"frenzied"},fret:{singularPast:"fretted",continuous:"fretting"},frig:{singularPast:"frigged",continuous:"frigging"},fritt:{singularPast:"fritted",continuous:"fritting"},frivol:{singularPast:"frivolled",continuous:"frivolling"},frog:{singularPast:"frogged",continuous:"frogging"},frolic:{singularPast:"frolicked",continuous:"frolicking"},fructify:{singularPast:"fructified"},fry:{singularPast:"fried"},fuel:{singularPast:"fuelled",continuous:"fuelling"},fulfill:{singularPast:"fulfilled",continuous:"fulfilling"},fun:{singularPast:"funned",continuous:"funning"},funnel:{singularPast:"funnelled",continuous:"funnelling"},fur:{singularPast:"furred",continuous:"furring"},gad:{singularPast:"gadded",continuous:"gadding"},gag:{singularPast:"gagged",continuous:"gagging"},gainsay:{singularPast:"gainsaid"},gam:{singularPast:"gammed",continuous:"gamming"},gambol:{singularPast:"gambolled",continuous:"gambolling"},gan:{singularPast:"ganned",continuous:"ganning"},gap:{singularPast:"gapped",continuous:"gapping"},gas:{singularPast:"gassed",singularPresent:"gasses",continuous:"gassing"},gasify:{singularPast:"gasified"},gel:{singularPast:"gelled",continuous:"gelling"},gem:{singularPast:"gemmed",continuous:"gemming"},get:{continuous:"getting",singularPast:"got",perfect:"gotten"},ghostwrite:{perfect:"ghostwritten",singularPast:"ghostwrote"},gib:{singularPast:"gibbed",continuous:"gibbing"},giddy:{singularPast:"giddied"},giftwrap:{singularPast:"giftwrapped",continuous:"giftwrapping"},gig:{singularPast:"gigged",continuous:"gigging"},gin:{singularPast:"ginned",continuous:"ginning"},gip:{singularPast:"gipped",continuous:"gipping"},give:{singularPast:"gave",perfect:"given"},glom:{singularPast:"glommed",continuous:"glomming"},glorify:{singularPast:"glorified"},glory:{singularPast:"gloried"},glut:{singularPast:"glutted",continuous:"glutting"},go:{perfect:"gone",singularPast:"went"},golly:{singularPast:"gollied"},grab:{singularPast:"grabbed",continuous:"grabbing"},gratify:{singularPast:"gratified"},grave:{perfect:"graven"},gravel:{singularPast:"gravelled",continuous:"gravelling"},grin:{singularPast:"grinned",continuous:"grinning"},grind:{singularPast:"ground"},grip:{singularPast:"gripped",continuous:"gripping"},grit:{singularPast:"gritted",continuous:"gritting"},grovel:{singularPast:"grovelled",continuous:"grovelling"},grow:{singularPast:"grew",perfect:"grown"},grub:{singularPast:"grubbed",continuous:"grubbing"},guaranty:{singularPast:"guarantied"},gully:{singularPast:"gullied"},gum:{singularPast:"gummed",continuous:"gumming"},gun:{singularPast:"gunned",continuous:"gunning"},gyp:{singularPast:"gypped",continuous:"gypping"},hacksaw:{perfect:"hacksawn"},ham:{singularPast:"hammed",continuous:"hamming"},hamstring:{singularPast:"hamstrung"},handfeed:{singularPast:"handfed"},handicap:{singularPast:"handicapped",continuous:"handicapping"},handsel:{singularPast:"handselled",continuous:"handselling"},hang:{singularPast:"hung"},harry:{singularPast:"harried"},hat:{singularPast:"hatted",continuous:"hatting"},hatchel:{singularPast:"hatchelled",continuous:"hatchelling"},have:{singularPast:"had",singularPresent:"has"},hear:{singularPast:"heard"},hedgehop:{singularPast:"hedgehopped",continuous:"hedgehopping"},hem:{singularPast:"hemmed",continuous:"hemming"},hew:{perfect:"hewn"},hiccup:{singularPast:"hiccupped",continuous:"hiccupping"},hide:{singularPast:"hid",perfect:"hidden"},hinny:{singularPast:"hinnied"},hit:{continuous:"hitting",singularPast:"hit"},hob:{singularPast:"hobbed",continuous:"hobbing"},hobnob:{singularPast:"hobnobbed",continuous:"hobnobbing"},hocus:{singularPast:"hocussed",continuous:"hocussing"},hog:{singularPast:"hogged",continuous:"hogging"},hogtie:{continuous:"hogtying"},hold:{singularPast:"held"},hop:{singularPast:"hopped",continuous:"hopping"},horrify:{singularPast:"horrified"},horsewhip:{singularPast:"horsewhipped",continuous:"horsewhipping"},housel:{singularPast:"houselled",continuous:"houselling"},hovel:{singularPast:"hovelled",continuous:"hovelling"},hug:{singularPast:"hugged",continuous:"hugging"},hum:{singularPast:"hummed",continuous:"humming"},humbug:{singularPast:"humbugged",continuous:"humbugging"},humidify:{singularPast:"humidified"},hurry:{singularPast:"hurried"},hypertrophy:{singularPast:"hypertrophied"},identify:{singularPast:"identified"},imbed:{singularPast:"imbedded",continuous:"imbedding"},impanel:{singularPast:"impanelled",continuous:"impanelling"},impel:{singularPast:"impelled",continuous:"impelling"},imply:{singularPast:"implied"},inbreed:{singularPast:"inbred"},incur:{singularPast:"incurred",continuous:"incurring"},indemnify:{singularPast:"indemnified"},infer:{singularPast:"inferred",continuous:"inferring"},initial:{singularPast:"initialled",continuous:"initialling"},inlay:{singularPast:"inlaid"},inset:{continuous:"insetting"},inspan:{singularPast:"inspanned",continuous:"inspanning"},install:{singularPast:"installed",continuous:"installing"},intensify:{singularPast:"intensified"},inter:{singularPast:"interred",continuous:"interring"},intermit:{singularPast:"intermitted",continuous:"intermitting"},intromit:{singularPast:"intromitted",continuous:"intromitting"},inweave:{singularPast:"inwove",perfect:"inwoven"},inwrap:{singularPast:"inwrapped",continuous:"inwrapping"},jab:{singularPast:"jabbed",continuous:"jabbing"},jag:{singularPast:"jagged",continuous:"jagging"},jam:{singularPast:"jammed",continuous:"jamming"},japan:{singularPast:"japanned",continuous:"japanning"},jar:{singularPast:"jarred",continuous:"jarring"},jellify:{singularPast:"jellified"},jelly:{singularPast:"jellied"},jemmy:{singularPast:"jemmied"},jet:{singularPast:"jetted",continuous:"jetting"},jewel:{singularPast:"jewelled",continuous:"jewelling"},jib:{singularPast:"jibbed",continuous:"jibbing"},jig:{singularPast:"jigged",continuous:"jigging"},jimmy:{singularPast:"jimmied"},jitterbug:{singularPast:"jitterbugged",continuous:"jitterbugging"},job:{singularPast:"jobbed",continuous:"jobbing"},jog:{singularPast:"jogged",continuous:"jogging"},jollify:{singularPast:"jollified"},jolly:{singularPast:"jollied"},jot:{singularPast:"jotted",continuous:"jotting"},joypop:{singularPast:"joypopped",continuous:"joypopping"},jug:{singularPast:"jugged",continuous:"jugging"},justify:{singularPast:"justified"},jut:{singularPast:"jutted",continuous:"jutting"},keep:{singularPast:"kept"},ken:{singularPast:"kenned",continuous:"kenning"},kennel:{singularPast:"kennelled",continuous:"kennelling"},kernel:{singularPast:"kernelled",continuous:"kernelling"},kid:{singularPast:"kidded",continuous:"kidding"},kidnap:{singularPast:"kidnapped",continuous:"kidnapping"},kip:{singularPast:"kipped",continuous:"kipping"},knap:{singularPast:"knapped",continuous:"knapping"},kneecap:{singularPast:"kneecapped",continuous:"kneecapping"},knit:{singularPast:"knitted",continuous:"knitting"},knob:{singularPast:"knobbed",continuous:"knobbing"},knot:{singularPast:"knotted",continuous:"knotting"},know:{singularPast:"knew",perfect:"known"},label:{singularPast:"labelled",continuous:"labelling"},lade:{perfect:"laden"},ladify:{singularPast:"ladyfied",singularPresent:"ladyfies",continuous:"ladyfying"},lag:{singularPast:"lagged",continuous:"lagging"},lallygag:{singularPast:"lallygagged",continuous:"lallygagging"},lam:{singularPast:"lammed",continuous:"lamming"},lap:{singularPast:"lapped",continuous:"lapping"},lapidify:{singularPast:"lapidified"},laurel:{singularPast:"laurelled",continuous:"laurelling"},lay:{singularPast:"laid"},lead:{singularPast:"led"},leapfrog:{singularPast:"leapfrogged",continuous:"leapfrogging"},leave:{singularPast:"left"},learn:{singularPast:"learnt"},lend:{singularPast:"lent"},let:{continuous:"letting",singularPast:"let"},level:{singularPast:"levelled",continuous:"levelling"},levy:{singularPast:"levied"},libel:{singularPast:"libelled",continuous:"libelling"},lie:{perfect:"lain",singularPast:"lay",continuous:"lying"},light:{singularPast:"lit"},lignify:{singularPast:"lignified"},lip:{singularPast:"lipped",continuous:"lipping"},liquefy:{singularPast:"liquefied"},liquify:{singularPast:"liquified"},lob:{singularPast:"lobbed",continuous:"lobbing"},lobby:{singularPast:"lobbied"},log:{singularPast:"logged",continuous:"logging"},lop:{singularPast:"lopped",continuous:"lopping"},lose:{singularPast:"lost"},lot:{singularPast:"lotted",continuous:"lotting"},lug:{singularPast:"lugged",continuous:"lugging"},lullaby:{singularPast:"lullabied"},mad:{singularPast:"madded",continuous:"madding"},magnify:{singularPast:"magnified"},make:{singularPast:"made"},man:{singularPast:"manned",continuous:"manning"},manumit:{singularPast:"manumitted",continuous:"manumitting"},map:{singularPast:"mapped",continuous:"mapping"},mar:{singularPast:"marred",continuous:"marring"},marcel:{singularPast:"marcelled",continuous:"marcelling"},marry:{singularPast:"married"},marshal:{singularPast:"marshalled",continuous:"marshalling"},marvel:{singularPast:"marvelled",continuous:"marvelling"},mat:{singularPast:"matted",continuous:"matting"},mean:{singularPast:"meant"},medal:{singularPast:"medalled",continuous:"medalling"},meet:{singularPast:"met"},metal:{singularPast:"metalled",continuous:"metalling"},metrify:{singularPast:"metrified"},mimic:{singularPast:"mimicked",continuous:"mimicking"},minify:{singularPast:"minified"},mob:{singularPast:"mobbed",continuous:"mobbing"},model:{singularPast:"modelled",continuous:"modelling"},modify:{singularPast:"modified"},mollify:{singularPast:"mollified"},mop:{singularPast:"mopped",continuous:"mopping"},mortify:{singularPast:"mortified"},mow:{perfect:"mown"},mud:{singularPast:"mudded",continuous:"mudding"},muddy:{singularPast:"muddied"},mug:{singularPast:"mugged",continuous:"mugging"},multiply:{singularPast:"multiplied"},mum:{singularPast:"mummed",continuous:"mumming"},mummify:{singularPast:"mummified"},mutiny:{singularPast:"mutinied"},mystify:{singularPast:"mystified"},nab:{singularPast:"nabbed",continuous:"nabbing"},nag:{singularPast:"nagged",continuous:"nagging"},nap:{singularPast:"napped",continuous:"napping"},net:{singularPast:"netted",continuous:"netting"},nib:{singularPast:"nibbed",continuous:"nibbing"},nickel:{singularPast:"nickelled",continuous:"nickelling"},nidify:{singularPast:"nidified"},nigrify:{singularPast:"nigrified"},nip:{singularPast:"nipped",continuous:"nipping"},nitrify:{singularPast:"nitrified"},nod:{singularPast:"nodded",continuous:"nodding"},nonplus:{singularPast:"nonplussed",singularPresent:"nonplusses",continuous:"nonplussing"},notify:{singularPast:"notified"},nullify:{singularPast:"nullified"},nut:{singularPast:"nutted",continuous:"nutting"},objectify:{singularPast:"objectified"},occupy:{singularPast:"occupied"},occur:{singularPast:"occurred",continuous:"occurring"},offset:{continuous:"offsetting"},omit:{singularPast:"omitted",continuous:"omitting"},ossify:{singularPast:"ossified"},pacify:{singularPast:"pacified"},pad:{singularPast:"padded",continuous:"padding"},pal:{singularPast:"palled",continuous:"palling"},palsy:{singularPast:"palsied"},pan:{singularPast:"panned",continuous:"panning"},pandy:{singularPast:"pandied"},panel:{singularPast:"panelled",continuous:"panelling"},panic:{singularPast:"panicked",continuous:"panicking"},parallel:{singularPast:"parallelled",continuous:"parallelling"},parcel:{singularPast:"parcelled",continuous:"parcelling"},parody:{singularPast:"parodied"},parry:{singularPast:"parried"},partake:{perfect:"partaken",singularPast:"partook"},pat:{singularPast:"patted",continuous:"patting"},patrol:{singularPast:"patrolled",continuous:"patrolling"},pay:{singularPast:"paid"},pedal:{singularPast:"pedalled",continuous:"pedalling"},peg:{singularPast:"pegged",continuous:"pegging"},pen:{singularPast:"penned",continuous:"penning"},pencil:{singularPast:"pencilled",continuous:"pencilling"},pep:{singularPast:"pepped",continuous:"pepping"},permit:{singularPast:"permitted",continuous:"permitting"},personify:{singularPast:"personified"},pet:{singularPast:"petted",continuous:"petting"},petrify:{singularPast:"petrified"},pettifog:{singularPast:"pettifogged",continuous:"pettifogging"},phantasy:{singularPast:"phantasied"},photocopy:{singularPast:"photocopied"},photomap:{singularPast:"photomapped",continuous:"photomapping"},photoset:{continuous:"photosetting"},physic:{singularPast:"physicked",continuous:"physicking"},picnic:{singularPast:"picnicked",continuous:"picnicking"},pig:{singularPast:"pigged",continuous:"pigging"},pillory:{singularPast:"pilloried"},pin:{singularPast:"pinned",continuous:"pinning"},pip:{singularPast:"pipped",continuous:"pipping"},pistol:{singularPast:"pistolled",continuous:"pistolling"},pit:{singularPast:"pitted",continuous:"pitting"},pitapat:{singularPast:"pitapatted",continuous:"pitapatting"},pity:{singularPast:"pitied"},plan:{singularPast:"planned",continuous:"planning"},plat:{singularPast:"platted",continuous:"platting"},plead:{singularPast:"pled"},plod:{singularPast:"plodded",continuous:"plodding"},plop:{singularPast:"plopped",continuous:"plopping"},plot:{singularPast:"plotted",continuous:"plotting"},plug:{singularPast:"plugged",continuous:"plugging"},ply:{singularPast:"plied"},pod:{singularPast:"podded",continuous:"podding"},pommel:{singularPast:"pommelled",continuous:"pommelling"},pop:{singularPast:"popped",continuous:"popping"},pot:{singularPast:"potted",continuous:"potting"},preachify:{singularPast:"preachified"},prefer:{singularPast:"preferred",continuous:"preferring"},pretermit:{singularPast:"pretermitted",continuous:"pretermitting"},prettify:{singularPast:"prettified"},pretty:{singularPast:"prettied"},prig:{singularPast:"prigged",continuous:"prigging"},prim:{singularPast:"primmed",continuous:"primming"},prod:{singularPast:"prodded",continuous:"prodding"},program:{singularPast:"programmed",continuous:"programming"},prop:{singularPast:"propped",continuous:"propping"},propel:{singularPast:"propelled",continuous:"propelling"},prophesy:{singularPast:"prophesied"},pry:{singularPast:"pried"},pub:{singularPast:"pubbed",continuous:"pubbing"},pug:{singularPast:"pugged",continuous:"pugging"},pummel:{singularPast:"pummelled",continuous:"pummelling"},pun:{singularPast:"punned",continuous:"punning"},pup:{singularPast:"pupped",continuous:"pupping"},purify:{singularPast:"purified"},put:{singularPast:"put",continuous:"putting"},putrefy:{singularPast:"putrefied"},putty:{singularPast:"puttied"},qualify:{singularPast:"qualified"},quantify:{singularPast:"quantified"},quarrel:{singularPast:"quarrelled",continuous:"quarrelling"},quarry:{singularPast:"quarried"},quartersaw:{perfect:"quartersawn"},query:{singularPast:"queried"},quickstep:{singularPast:"quickstepped",continuous:"quickstepping"},quip:{singularPast:"quipped",continuous:"quipping"},quit:{singularPast:"quitted",continuous:"quitting"},quiz:{singularPast:"quizzed",singularPresent:"quizzes",continuous:"quizzing"},rag:{singularPast:"ragged",continuous:"ragging"},rally:{singularPast:"rallied"},ram:{singularPast:"rammed",continuous:"ramming"},ramify:{singularPast:"ramified"},rap:{singularPast:"rapped",continuous:"rapping"},rappel:{singularPast:"rappelled",continuous:"rappelling"},rarefy:{singularPast:"rarefied"},rat:{singularPast:"ratted",continuous:"ratting"},ratify:{singularPast:"ratified"},ravel:{singularPast:"ravelled",continuous:"ravelling"},reave:{singularPast:"reft"},rebel:{singularPast:"rebelled",continuous:"rebelling"},rectify:{singularPast:"rectified"},recur:{singularPast:"recurred",continuous:"recurring"},red:{singularPast:"redded",continuous:"redding"},redd:{singularPast:"redded",continuous:"redding"},refer:{singularPast:"referred",continuous:"referring"},regret:{singularPast:"regretted",continuous:"regretting"},reify:{singularPast:"reified"},rely:{singularPast:"relied"},remit:{singularPast:"remitted",continuous:"remitting"},repel:{singularPast:"repelled",continuous:"repelling"},replevy:{singularPast:"replevied"},reply:{singularPast:"replied"},ret:{singularPast:"retted",continuous:"retting"},retrofit:{singularPast:"retrofitted",continuous:"retrofitting"},rev:{singularPast:"revved",continuous:"revving"},revel:{singularPast:"revelled",continuous:"revelling"},revet:{singularPast:"revetted",continuous:"revetting"},rib:{singularPast:"ribbed",continuous:"ribbing"},ricochet:{singularPast:"ricochetted",continuous:"ricochetting"},rid:{singularPast:"ridded",continuous:"ridding"},ride:{perfect:"ridden",singularPast:"rode"},rig:{singularPast:"rigged",continuous:"rigging"},rigidify:{singularPast:"rigidified"},rim:{singularPast:"rimmed",continuous:"rimming"},ring:{singularPast:"rang",perfect:"rung"},rip:{singularPast:"ripped",continuous:"ripping"},rise:{perfect:"risen",singularPast:"rose"},rival:{singularPast:"rivalled",continuous:"rivalling"},rive:{perfect:"riven"},rob:{singularPast:"robbed",continuous:"robbing"},rot:{singularPast:"rotted",continuous:"rotting"},rowel:{singularPast:"rowelled",continuous:"rowelling"},rub:{singularPast:"rubbed",continuous:"rubbing"},run:{singularPast:"ran",continuous:"running"},rut:{singularPast:"rutted",continuous:"rutting"},saccharify:{singularPast:"saccharified"},sag:{singularPast:"sagged",continuous:"sagging"},salary:{singularPast:"salaried"},salify:{singularPast:"salified"},sally:{singularPast:"sallied"},sanctify:{singularPast:"sanctified"},sandbag:{singularPast:"sandbagged",continuous:"sandbagging"},sap:{singularPast:"sapped",continuous:"sapping"},saponify:{singularPast:"saponified"},satisfy:{singularPast:"satisfied"},savvy:{singularPast:"savvied"},saw:{perfect:"sawn"},say:{singularPast:"said"},scag:{singularPast:"scagged",continuous:"scagging"},scan:{singularPast:"scanned",continuous:"scanning"},scar:{singularPast:"scarred",continuous:"scarring"},scarify:{singularPast:"scarified"},scat:{singularPast:"scatted",continuous:"scatting"},scorify:{singularPast:"scorified"},scrag:{singularPast:"scragged",continuous:"scragging"},scram:{singularPast:"scrammed",continuous:"scramming"},scrap:{singularPast:"scrapped",continuous:"scrapping"},scrub:{singularPast:"scrubbed",continuous:"scrubbing"},scrum:{singularPast:"scrummed",continuous:"scrumming"},scry:{singularPast:"scried"},scud:{singularPast:"scudded",continuous:"scudding"},scum:{singularPast:"scummed",continuous:"scumming"},scurry:{singularPast:"scurried"},see:{singularPast:"saw",perfect:"seen"},seek:{singularPast:"sought"},sell:{singularPast:"sold"},send:{singularPast:"sent"},set:{continuous:"setting"},sew:{perfect:"sewn"},shag:{singularPast:"shagged",continuous:"shagging"},shake:{perfect:"shaken",singularPast:"shook"},sham:{singularPast:"shammed",continuous:"shamming"},sharecrop:{singularPast:"sharecropped",continuous:"sharecropping"},shed:{singularPast:"shed",continuous:"shedding"},shellac:{singularPast:"shellacked",continuous:"shellacking"},shew:{perfect:"shewn"},shikar:{singularPast:"shikarred",continuous:"shikarring"},shillyshally:{singularPast:"shillyshallied"},shim:{singularPast:"shimmed",continuous:"shimming"},shimmy:{singularPast:"shimmied"},shin:{singularPast:"shinned",continuous:"shinning"},shine:{singularPast:"shone"},ship:{singularPast:"shipped",continuous:"shipping"},shit:{singularPast:"shat",continuous:"shitting"},shoe:{singularPast:"shod"},shoot:{singularPast:"shot"},shop:{singularPast:"shopped",continuous:"shopping"},shot:{singularPast:"shotted",continuous:"shotting"},shotgun:{singularPast:"shotgunned",continuous:"shotgunning"},shovel:{singularPast:"shovelled",continuous:"shovelling"},show:{perfect:"shown"},shred:{singularPast:"shredded",continuous:"shredding"},shrink:{singularPast:"shrank",perfect:"shrunk"},shrive:{perfect:"shriven",singularPast:"shrove"},shrivel:{singularPast:"shrivelled",continuous:"shrivelling"},shrug:{singularPast:"shrugged",continuous:"shrugging"},shun:{singularPast:"shunned",continuous:"shunning"},shut:{continuous:"shutting"},shy:{singularPast:"shied"},sic:{singularPast:"sicked",continuous:"sicking"},sideslip:{singularPast:"sideslipped",continuous:"sideslipping"},sidestep:{singularPast:"sidestepped",continuous:"sidestepping"},sightsee:{singularPast:"sightsaw",perfect:"sightseen"},signal:{singularPast:"signalled",continuous:"signalling"},signify:{singularPast:"signified"},silicify:{singularPast:"silicified"},simplify:{singularPast:"simplified"},sin:{singularPast:"sinned",continuous:"sinning"},sing:{singularPast:"sang",perfect:"sung"},singe:{continuous:"singing"},sink:{singularPast:"sank",perfect:"sunk"},sip:{singularPast:"sipped",continuous:"sipping"},sit:{singularPast:"sat",continuous:"sitting"},skelly:{singularPast:"skellied"},sken:{singularPast:"skenned",continuous:"skenning"},sket:{singularPast:"sketted",continuous:"sketting"},skid:{singularPast:"skidded",continuous:"skidding"},skim:{singularPast:"skimmed",continuous:"skimming"},skin:{singularPast:"skinned",continuous:"skinning"},skip:{singularPast:"skipped",continuous:"skipping"},skivvy:{singularPast:"skivvied"},slab:{singularPast:"slabbed",continuous:"slabbing"},slag:{singularPast:"slagged",continuous:"slagging"},slam:{singularPast:"slammed",continuous:"slamming"},slap:{singularPast:"slapped",continuous:"slapping"},slat:{singularPast:"slatted",continuous:"slatting"},slay:{perfect:"slain",singularPast:"slew"},sled:{continuous:"sledding"},sleep:{singularPast:"slept"},slide:{singularPast:"slid",perfect:"slidden"},sling:{singularPast:"slung"},slink:{singularPast:"slunk"},slip:{singularPast:"slipped",continuous:"slipping"},slit:{continuous:"slitting"},slog:{singularPast:"slogged",continuous:"slogging"},slop:{singularPast:"slopped",continuous:"slopping"},slot:{singularPast:"slotted",continuous:"slotting"},slug:{singularPast:"slugged",continuous:"slugging"},slum:{singularPast:"slummed",continuous:"slumming"},slur:{singularPast:"slurred",continuous:"slurring"},smite:{perfect:"smitten",singularPast:"smote"},smut:{singularPast:"smutted",continuous:"smutting"},snag:{singularPast:"snagged",continuous:"snagging"},snap:{singularPast:"snapped",continuous:"snapping"},sned:{singularPast:"snedded",continuous:"snedding"},snip:{singularPast:"snipped",continuous:"snipping"},snivel:{singularPast:"snivelled",continuous:"snivelling"},snog:{singularPast:"snogged",continuous:"snogging"},snub:{singularPast:"snubbed",continuous:"snubbing"},snug:{singularPast:"snugged",continuous:"snugging"},sob:{singularPast:"sobbed",continuous:"sobbing"},sod:{singularPast:"sodded",continuous:"sodding"},solemnify:{singularPast:"solemnified"},solidify:{singularPast:"solidified"},soothsay:{singularPast:"soothsaid"},sop:{singularPast:"sopped",continuous:"sopping"},sow:{perfect:"sown"},spag:{singularPast:"spagged",continuous:"spagging"},span:{singularPast:"spanned",continuous:"spanning"},spancel:{singularPast:"spancelled",continuous:"spancelling"},spar:{singularPast:"sparred",continuous:"sparring"},spat:{singularPast:"spatted",continuous:"spatting"},speak:{singularPast:"spoke",perfect:"spoken"},specify:{singularPast:"specified"},speechify:{singularPast:"speechified"},speed:{singularPast:"sped"},spellbind:{singularPast:"spellbound"},spend:{singularPast:"spent"},spin:{continuous:"spinning",singularPast:"spun"},spiral:{singularPast:"spiralled",continuous:"spiralling"},spit:{singularPast:"spat",continuous:"spitting"},split:{singularPast:"split",continuous:"splitting"},spot:{singularPast:"spotted",continuous:"spotting"},spotlight:{singularPast:"spotlit"},sprig:{singularPast:"sprigged",continuous:"sprigging"},spring:{singularPast:"sprang",perfect:"sprung"},spud:{singularPast:"spudded",continuous:"spudding"},spur:{singularPast:"spurred",continuous:"spurring"},spy:{singularPast:"spied"},squat:{singularPast:"squatted",continuous:"squatting"},squib:{singularPast:"squibbed",continuous:"squibbing"},squid:{singularPast:"squidded",continuous:"squidding"},stab:{singularPast:"stabbed",continuous:"stabbing"},stand:{singularPast:"stood"},star:{singularPast:"starred",continuous:"starring"},steady:{singularPast:"steadied"},steal:{singularPast:"stole",perfect:"stolen"},stellify:{singularPast:"stellified"},stem:{singularPast:"stemmed",continuous:"stemming"},stencil:{singularPast:"stencilled",continuous:"stencilling"},step:{singularPast:"stepped",continuous:"stepping"},stet:{singularPast:"stetted",continuous:"stetting"},stick:{singularPast:"stuck"},stiletto:{continuous:"stilettoeing"},sting:{singularPast:"stung"},stink:{singularPast:"stank",perfect:"stunk"},stir:{singularPast:"stirred",continuous:"stirring"},stop:{singularPast:"stopped",continuous:"stopping"},story:{singularPast:"storied"},stot:{singularPast:"stotted",continuous:"stotting"},strap:{singularPast:"strapped",continuous:"strapping"},stratify:{singularPast:"stratified"},strew:{perfect:"strewn"},stride:{perfect:"stridden",singularPast:"strode"},strike:{singularPast:"struck"},string:{singularPast:"strung"},strip:{singularPast:"stripped",continuous:"stripping"},strive:{perfect:"striven",singularPast:"strove"},strop:{singularPast:"stropped",continuous:"stropping"},strow:{perfect:"strown"},strum:{singularPast:"strummed",continuous:"strumming"},strut:{singularPast:"strutted",continuous:"strutting"},stub:{singularPast:"stubbed",continuous:"stubbing"},stud:{singularPast:"studded",continuous:"studding"},study:{singularPast:"studied"},stultify:{singularPast:"stultified"},stum:{singularPast:"stummed",continuous:"stumming"},stun:{singularPast:"stunned",continuous:"stunning"},stupefy:{singularPast:"stupefied"},sty:{singularPast:"stied"},stymie:{continuous:"stymying"},sub:{singularPast:"subbed",continuous:"subbing"},subjectify:{singularPast:"subjectified"},sublet:{continuous:"subletting"},submit:{singularPast:"submitted",continuous:"submitting"},sully:{singularPast:"sullied"},sulphuret:{singularPast:"sulphuretted",continuous:"sulphuretting"},sum:{singularPast:"summed",continuous:"summing"},sun:{singularPast:"sunned",continuous:"sunning"},sup:{singularPast:"supped",continuous:"supping"},supply:{singularPast:"supplied"},swab:{singularPast:"swabbed",continuous:"swabbing"},swag:{singularPast:"swagged",continuous:"swagging"},swap:{singularPast:"swapped",continuous:"swapping"},swat:{singularPast:"swatted",continuous:"swatting"},swear:{singularPast:"swore",perfect:"sworn"},sweep:{singularPast:"swept"},swell:{perfect:"swollen"},swig:{singularPast:"swigged",continuous:"swigging"},swim:{singularPast:"swam",continuous:"swimming",perfect:"swum"},swing:{singularPast:"swung"},swivel:{singularPast:"swivelled",continuous:"swivelling"},swot:{singularPast:"swotted",continuous:"swotting"},syllabify:{singularPast:"syllabified"},symbol:{singularPast:"symbolled",continuous:"symbolling"},tab:{singularPast:"tabbed",continuous:"tabbing"},tag:{singularPast:"tagged",continuous:"tagging"},take:{perfect:"taken",singularPast:"took"},tally:{singularPast:"tallied"},tammy:{singularPast:"tammied"},tan:{singularPast:"tanned",continuous:"tanning"},tap:{singularPast:"tapped",continuous:"tapping"},tar:{singularPast:"tarred",continuous:"tarring"},tarry:{singularPast:"tarried"},tassel:{singularPast:"tasselled",continuous:"tasselling"},tat:{singularPast:"tatted",continuous:"tatting"},taxi:{continuous:"taxying"},teach:{singularPast:"taught"},tear:{singularPast:"tore",perfect:"torn"},teasel:{singularPast:"teaselled",continuous:"teaselling"},ted:{singularPast:"tedded",continuous:"tedding"},tell:{singularPast:"told"},tepefy:{singularPast:"tepefied"},terrify:{singularPast:"terrified"},testify:{singularPast:"testified"},thin:{singularPast:"thinned",continuous:"thinning"},think:{singularPast:"thought"},throb:{singularPast:"throbbed",continuous:"throbbing"},throw:{singularPast:"threw",perfect:"thrown"},thrum:{singularPast:"thrummed",continuous:"thrumming"},thud:{singularPast:"thudded",continuous:"thudding"},tidy:{singularPast:"tidied"},tie:{continuous:"tying"},tin:{singularPast:"tinned",continuous:"tinning"},tinsel:{singularPast:"tinselled",continuous:"tinselling"},tip:{singularPast:"tipped",continuous:"tipping"},tittup:{singularPast:"tittupped",continuous:"tittupping"},toady:{singularPast:"toadied"},tog:{singularPast:"togged",continuous:"togging"},top:{singularPast:"topped",continuous:"topping"},torrefy:{singularPast:"torrefied"},tot:{singularPast:"totted",continuous:"totting"},total:{singularPast:"totalled",continuous:"totalling"},towel:{singularPast:"towelled",continuous:"towelling"},traffic:{singularPast:"trafficked",continuous:"trafficking"},tram:{singularPast:"trammed",continuous:"tramming"},trammel:{singularPast:"tramelled",continuous:"tramelling"},transfer:{singularPast:"transferred",continuous:"transferring"},tranship:{singularPast:"transhipped",continuous:"transhipping"},transmit:{singularPast:"transmitted",continuous:"transmitting"},transmogrify:{singularPast:"transmogrified"},transship:{singularPast:"transshipped",continuous:"transshipping"},trap:{singularPast:"trapped",continuous:"trapping"},trapan:{singularPast:"trapanned",continuous:"trapanning"},travel:{singularPast:"travelled",continuous:"travelling"},travesty:{singularPast:"travestied"},tread:{singularPast:"trod",perfect:"trodden"},trek:{singularPast:"trekked",continuous:"trekking"},trepan:{singularPast:"trepanned",continuous:"trepanning"},trig:{singularPast:"trigged",continuous:"trigging"},trim:{singularPast:"trimmed",continuous:"trimming"},trip:{singularPast:"tripped",continuous:"tripping"},trog:{singularPast:"trogged",continuous:"trogging"},trot:{singularPast:"trotted",continuous:"trotting"},trowel:{singularPast:"trowelled",continuous:"trowelling"},try:{singularPast:"tried"},tug:{singularPast:"tugged",continuous:"tugging"},tumefy:{singularPast:"tumefied"},tun:{singularPast:"tunned",continuous:"tunning"},tunnel:{singularPast:"tunnelled",continuous:"tunnelling"},tup:{singularPast:"tupped",continuous:"tupping"},twig:{singularPast:"twigged",continuous:"twigging"},twin:{singularPast:"twinned",continuous:"twinning"},twit:{singularPast:"twitted",continuous:"twitting"},typeset:{continuous:"typesetting"},typewrite:{perfect:"typewritten",singularPast:"typewrote"},typify:{singularPast:"typified"},uglify:{singularPast:"uglified"},unify:{singularPast:"unified"},up:{singularPast:"upped",continuous:"upping"},upbuild:{singularPast:"upbuilt"},uphold:{singularPast:"upheld"},uppercut:{continuous:"uppercutting"},uprise:{perfect:"uprisen",singularPast:"uprose"},upset:{continuous:"upsetting"},upspring:{singularPast:"upsprang",perfect:"upsprung"},upsweep:{singularPast:"upswept"},upswell:{perfect:"upswollen"},upswing:{singularPast:"upswung"},vag:{singularPast:"vagged",continuous:"vagging"},vary:{singularPast:"varied"},vat:{singularPast:"vatted",continuous:"vatting"},verbify:{singularPast:"verbified"},verify:{singularPast:"verified"},versify:{singularPast:"versified"},vet:{singularPast:"vetted",continuous:"vetting"},victual:{singularPast:"victualled",continuous:"victualling"},vie:{continuous:"vying"},vilify:{singularPast:"vilified"},vitrify:{singularPast:"vitrified"},vitriol:{singularPast:"vitriolled",continuous:"vitriolling"},vivify:{singularPast:"vivified"},wad:{singularPast:"wadded",continuous:"wadding"},waddy:{singularPast:"waddied"},wadset:{singularPast:"wadsetted",continuous:"wadsetting"},wag:{singularPast:"wagged",continuous:"wagging"},wake:{singularPast:"woke",perfect:"woken"},wan:{singularPast:"wanned",continuous:"wanning"},war:{singularPast:"warred",continuous:"warring"},waylay:{singularPast:"waylaid"},wear:{singularPast:"wore",perfect:"worn"},weary:{singularPast:"wearied"},weatherstrip:{singularPast:"weatherstripped",continuous:"weatherstripping"},weave:{singularPast:"wove",perfect:"woven"},web:{singularPast:"webbed",continuous:"webbing"},wed:{singularPast:"wedded",continuous:"wedding"},weep:{singularPast:"wept"},wet:{singularPast:"wetted",continuous:"wetting"},wham:{singularPast:"whammed",continuous:"whamming"},whap:{singularPast:"whapped",continuous:"whapping"},whet:{singularPast:"whetted",continuous:"whetting"},whinny:{singularPast:"whinnied"},whip:{singularPast:"whipped",continuous:"whipping"},whipsaw:{perfect:"whipsawn"},whir:{singularPast:"whirred",continuous:"whirring"},whiz:{singularPast:"whizzed",singularPresent:"whizzes",continuous:"whizzing"},whop:{singularPast:"whopped",continuous:"whopping"},wig:{singularPast:"wigged",continuous:"wigging"},wigwag:{singularPast:"wigwagged",continuous:"wigwagging"},wildcat:{singularPast:"wildcatted",continuous:"wildcatting"},win:{continuous:"winning",singularPast:"won"},wind:{singularPast:"wound"},winterfeed:{singularPast:"winterfed"},wiredraw:{perfect:"wiredrawn",singularPast:"wiredrew"},withdraw:{perfect:"withdrawn",singularPast:"withdrew"},withhold:{singularPast:"withheld"},withstand:{singularPast:"withstood"},won:{singularPast:"wonned",continuous:"wonning"},worry:{singularPast:"worried"},worship:{singularPast:"worshipped",continuous:"worshipping"},wrap:{singularPast:"wrapped",continuous:"wrapping"},wring:{singularPast:"wrung"},write:{perfect:"written",singularPast:"wrote"},wry:{singularPast:"wried"},yak:{singularPast:"yakked",continuous:"yakking"},yap:{singularPast:"yapped",continuous:"yapping"},yen:{singularPast:"yenned",continuous:"yenning"},yodel:{singularPast:"yodelled",continuous:"yodelling"},zap:{singularPast:"zapped",continuous:"zapping"},zigzag:{singularPast:"zigzagged",continuous:"zigzagging"},zip:{singularPast:"zipped",continuous:"zipping"}}},function(n,i,s){"use strict";s.r(i),function(n){var i=s(0);n.exports=function(n){if(!n||void 0===n||"string"!=typeof n)throw new TypeError("No valid verb string entered.");let s=n.toLowerCase().trim().split(" ")[0],t={infinitive:"",firstPresent:"",singularPresent:"",pluralPresent:"",firstPast:"",singularPast:"",pluralPast:"",perfect:"",continuous:""};if(t.infinitive=s,"be"===s)t.firstPresent="am",t.singularPresent="is",t.pluralPresent="are",t.firstPast="was",t.singularPast="was",t.pluralPast="were",t.perfect="been",t.continuous="being";else{let n=new RegExp("(over|under|un|re|de|dis|mis|out|co|pre|post|sub|inter|over\\-|under\\-|un\\-|re\\-|de\\-|dis\\-|mis\\-|out\\-|co\\-|pre\\-|post\\-|sub\\-|inter\\-|\\b)("+s+"\\b)");if(regex=s.match(n)){let n=regex[1];regex[0],i[n]}let a=s.slice(-2),u=s.slice(-1);if(!t.singularPresent)if("ch"===a||"sh"===a||"s"===u||"x"===u||"o"===u&&"oo"!=a)t.singularPresent=s+"es";else if("by"===a||"cy"===a||"dy"===a||"fy"===a||"gy"===a||"hy"===a||"jy"===a||"ky"===a||"ly"===a||"my"===a||"ny"===a||"py"===a||"qy"===a||"ry"===a||"sy"===a||"ty"===a||"vy"===a||"wy"===a||"xy"===a||"zy"===a){let n=s.slice(0,-1);t.singularPresent=n+"ies",t.singularPast||(t.singularPast=n+"ied")}else t.singularPresent=s+"s";if(t.singularPast||(t.singularPast="e"===u?s+"d":s+"ed"),!t.continuous)if("e"===u&&"ee"!=a){let n=s.slice(0,-1);t.continuous=n+"ing"}else t.continuous=s+"ing";t.perfect||(t.perfect=t.singularPast),t.firstPast||(t.firstPast=t.singularPast),t.pluralPast||(t.pluralPast=t.singularPast),t.firstPresent||(t.firstPresent=t.infinitive),t.pluralPresent||(t.pluralPresent=t.infinitive)}return t.present=function(n,i,t,a){return!n||"string"!=typeof n||"FIRST"!==n.toUpperCase()&&"SINGULAR"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()?this.infinitive:"FIRST"!==n.toUpperCase()||i||t||a?"FIRST"!==n.toUpperCase()||i||!t||a?"SINGULAR"!==n.toUpperCase()||i||t||a?"SINGULAR"!==n.toUpperCase()||i||!t||a?"PLURAL"!==n.toUpperCase()||i||t||a?"PLURAL"!==n.toUpperCase()||i||!t||a?"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()||i||t||!a?"FIRST"===n.toUpperCase()||"PLURAL"===n.toUpperCase()||i||t||!a?"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()||i||!t||!a?"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()&&!i&&t&&a?"has been "+this.continuous:"be"===s||"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()||!i||t||a?"be"===s||"FIRST"===n.toUpperCase()||"PLURAL"===n.toUpperCase()||!i||t||a?"be"!==s||"FIRST"!==n.toUpperCase()||!i||t||a?"be"!==s||"SINGULAR"!==n.toUpperCase()||!i||t||a?"be"!==s||"PLURAL"!==n.toUpperCase()||!i||t||a?"FIRST"===n.toUpperCase()&&i&&t&&!a?"am not "+this.continuous:"SINGULAR"===n.toUpperCase()&&i&&t&&!a?"isn't "+this.continuous:"PLURAL"===n.toUpperCase()&&i&&t&&!a?"aren't "+this.continuous:"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()||!i||t||!a?"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()&&i&&!t&&a?"hasn't "+this.perfect:("FIRST"===n.toUpperCase()||"PLURAL"===n.toUpperCase())&&i&&t&&a?"haven't been "+this.continuous:"FIRST"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()&&i&&t&&a?"hasn't been "+this.continuous:void 0:"haven't "+this.perfect:"aren't":"isn't":"am not":"doesn't "+this.infinitive:"don't "+this.infinitive:"have been "+this.continuous:"has "+this.perfect:"have "+this.perfect:"are "+this.continuous:this.pluralPresent:"is "+this.continuous:this.singularPresent:"am "+this.continuous:this.firstPresent},t.past=function(n,i,t,a){return!n||"string"!=typeof n||"FIRST"!==n.toUpperCase()&&"SINGULAR"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()?this.infinitive:"FIRST"!==n.toUpperCase()||i||t||a?"FIRST"!==n.toUpperCase()&&"SINGULAR"!==n.toUpperCase()||i||!t||a?"SINGULAR"!==n.toUpperCase()||i||t||a?"PLURAL"!==n.toUpperCase()||i||t||a?"PLURAL"!==n.toUpperCase()||i||!t||a?i||t||!a?!i&&t&&a?"had been "+this.continuous:"be"===s||!i||t||a?"be"!==s||"FIRST"!==n.toUpperCase()&&"SINGULAR"!==n.toUpperCase()||!i||t||a?"be"!==s||"PLURAL"!==n.toUpperCase()||!i||t||a?"FIRST"!==n.toUpperCase()&&"SINGULAR"!==n.toUpperCase()||!i||!t||a?"PLURAL"===n.toUpperCase()&&i&&t&&!a?"weren't "+this.continuous:i&&!t&&a?"hadn't "+this.perfect:i&&t&&a?"hadn't been "+this.continuous:void 0:"wasn't "+this.continuous:"weren't":"wasn't":"didn't "+this.infinitive:"had "+this.perfect:"were "+this.continuous:this.pluralPast:this.singularPast:"was "+this.continuous:this.firstPast},t.future=function(n,i,s,t){return!n||"string"!=typeof n||"FIRST"!==n.toUpperCase()&&"SINGULAR"!==n.toUpperCase()&&"PLURAL"!==n.toUpperCase()?this.infinitive:i||s||t?!i||s||t?i||!s||t?i&&s&&!t?"won't be "+this.continuous:i||s||!t?i&&!s&&t?"won't have "+this.perfect:!i&&s&&t?"will have been "+this.continuous:i&&s&&t?"won't have been "+this.continuous:void 0:"will have "+this.perfect:"will be "+this.continuous:"won't "+this.infinitive:"will "+this.infinitive},t}}.call(this,s(2)(n))},function(n,i){n.exports=function(n){if(!n.webpackPolyfill){var i=Object.create(n);i.children||(i.children=[]),Object.defineProperty(i,"loaded",{enumerable:!0,get:function(){return i.l}}),Object.defineProperty(i,"id",{enumerable:!0,get:function(){return i.i}}),Object.defineProperty(i,"exports",{enumerable:!0}),i.webpackPolyfill=1}return i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,